[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics",
    "section": "",
    "text": "Welcome to the working page for the Geospatial Analytics Course.\nThis website will cover below topics, as well as course assignments, projects.\n\nIntroduction to Geospatial Analytics\nSpatial Point Patterns Analysis (SPAA)\nAdvanced Spatial Point Patterns Analysis\nSpatial Weights and Applications\nGlobal and Local Measures of Spatial Association\nGeographic Segmentation\nGeographically Weighted Explanatory Models\nGeographically Weighted Predictive Models\nModelling Geographic of Accessibility\nSpatial Interaction Models"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#objective",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#objective",
    "title": "Hands-on Exercise 01",
    "section": "Objective",
    "text": "Objective\nIn this exercise, we will learn how to perform geospatial data science tasks in R by using sf package.\nWe aim to achieve the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment;\nimporting geospatial data by using appropriate functions of sf package;\nimporting aspatial data by using appropriate function of readr package;\nexploring the content of simple feature data frame by using appropriate Base R and sf functions;\nassigning or transforming coordinate systems by using using appropriate sf functions;\nconverting an aspatial data into a sf data frame by using appropriate function of sf package;\nperforming geoprocessing tasks by using appropriate functions of sf package;\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package.\n\n\nGetting started"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#objectives",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#objectives",
    "title": "01-Geospatial Data Science with R",
    "section": "1.1 Objectives",
    "text": "1.1 Objectives\nIn this exercise, we will learn how to perform geospatial data science tasks in R by using sf package.\nWe aim to achieve the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment;\nimporting geospatial data by using appropriate functions of sf package;\nimporting aspatial data by using appropriate function of readr package;\nexploring the content of simple feature data frame by using appropriate Base R and sf functions;\nassigning or transforming coordinate systems by using using appropriate sf functions;\nconverting an aspatial data into a sf data frame by using appropriate function of sf package;\nperforming geoprocessing tasks by using appropriate functions of sf package;\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-acquisition",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-acquisition",
    "title": "01-Geospatial Data Science with R",
    "section": "1.2 Data Acquisition",
    "text": "1.2 Data Acquisition\nWe will extract data sets for this exercise from the following sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n1.2.1 Extracting the geospatial data sets\nIn the Hands-on_Ex01 folder, we create a sub-folder called data and 2 data sub-folders as geospatial and aspatial respectively. Then, we place Master Plan 2014 Subzone Boundary (Web), Pre-Schools Location and Cycling Path zipped files into geospatial sub-folder and unzipped them. Copy the unzipped files from their respective sub-folders and place them inside geospatial sub-folder.\n\n\n1.2.2 Extracting the aspatial data set\nHere we will extract the downloaded listing data file. Cut and paste listing.csv into aspatialsub-folder."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "01-Geospatial Data Science with R",
    "section": "1.3 Getting Started",
    "text": "1.3 Getting Started\nTwo R packages are used in this exercise:\n\nsf for importing, managing, and processing geospatial data.\ntidyverse for performing data science tasks such as importing, wrangling and visualising data.\n\nThe following packages from the Tidyverse package will be used.\n\nreadr for importing csv data,\ntidyr for manipulating data,\ndplyr for transforming data, and\nggplot2 for visualising data\n\npacman must be installed. We will use the code below to load the necessary R packages into R.\n\npacman::p_load(sf, tidyverse)\n\nWe learn from the code above:\np_load function of pacman is used to install and load sf and tidyverse packages into R."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-geospatial-data",
    "title": "01-Geospatial Data Science with R",
    "section": "1.4 Importing Geospatial Data",
    "text": "1.4 Importing Geospatial Data\nWe will learn how to import the following geospatial data into R by using st_read() of sf package:\n\nMP14_SUBZONE_WEB_PL, a polygon feature layer in ESRI shapefile format,\n\n\n\nCyclingPath, a line feature layer in ESRI shapefile format,\nPreSchool, a point feature layer in kml file format.\n\n\n1.4.1 Importing polygon feature data in shapefile format\nThe code chunk below uses st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a polygon feature data frame.\nNote:\n\nwhen the input geospatial data is in shapefile format, two arguments will be used, namely: dsn to define the data path and layer to provide the shapefile name.\nno extension such as .shp, .dbf, .prj and .shx are needed.\n\n\nmpsz = st_read(dsn = \"data/geospatial\",\n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/cathyc/Documents/cathyschu/ISSS626GEO/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n1.4.2 Importing polyline feature data in shapefile form\n\n\n1.4.3 Importing GIS data in kml format"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "01-Geospatial Data Science with R",
    "section": "1.5 Checking the Content of A Simple Feature Data Frame",
    "text": "1.5 Checking the Content of A Simple Feature Data Frame\n\n1.5.1 Working with st_geometry()\n\n\n1.5.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-1",
    "title": "01-Geospatial Data Science with R",
    "section": "1.6",
    "text": "1.6"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-2",
    "title": "01-Geospatial Data Science with R",
    "section": "1.7",
    "text": "1.7\n\n1.7.1\n\n\n1.7.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-5",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-5",
    "title": "01-Geospatial Data Science with R",
    "section": "1.8",
    "text": "1.8\n\n1.8.1\n\n\n1.8.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-8",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#section-8",
    "title": "01-Geospatial Data Science with R",
    "section": "1.9",
    "text": "1.9\n\n1.9.1\n\n\n1.9.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#objectives",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#objectives",
    "title": "01-Geospatial Data Science with R",
    "section": "1.1 Objectives",
    "text": "1.1 Objectives\nIn this exercise, we will learn how to perform geospatial data science tasks in R by using sf package.\nWe aim to achieve the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment;\nimporting geospatial data by using appropriate functions of sf package;\nimporting aspatial data by using appropriate function of readr package;\nexploring the content of simple feature data frame by using appropriate Base R and sf functions;\nassigning or transforming coordinate systems by using using appropriate sf functions;\nconverting an aspatial data into a sf data frame by using appropriate function of sf package;\nperforming geoprocessing tasks by using appropriate functions of sf package;\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#data-acquisition",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#data-acquisition",
    "title": "01-Geospatial Data Science with R",
    "section": "1.2 Data Acquisition",
    "text": "1.2 Data Acquisition\nWe will extract data sets for this exercise from the following sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n1.2.1 Extracting the geospatial data sets\nIn the Hands-on_Ex01 folder, we create a sub-folder called data and 2 data sub-folders as geospatial and aspatial respectively. Then, we place Master Plan 2014 Subzone Boundary (Web), Pre-Schools Location and Cycling Path zipped files into geospatial sub-folder and unzipped them. Copy the unzipped files from their respective sub-folders and place them inside geospatial sub-folder.\n\n\n1.2.2 Extracting the aspatial data set\nHere we will extract the downloaded listing data file. Cut and paste listing.csv into aspatialsub-folder."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#getting-started",
    "title": "01-Geospatial Data Science with R",
    "section": "1.3 Getting Started",
    "text": "1.3 Getting Started\nTwo R packages are used in this exercise:\n\nsf for importing, managing, and processing geospatial data.\ntidyverse for performing data science tasks such as importing, wrangling and visualising data.\n\nThe following packages from the Tidyverse package will be used.\n\nreadr for importing csv data,\ntidyr for manipulating data,\ndplyr for transforming data, and\nggplot2 for visualising data\n\npacman must be installed. We will use the code below to load the necessary R packages into R.\n\npacman::p_load(sf, tidyverse)\n\nWe learn from the code above:\np_load function of pacman is used to install and load sf and tidyverse packages into R."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#importing-geospatial-data",
    "title": "01-Geospatial Data Science with R",
    "section": "1.4 Importing Geospatial Data",
    "text": "1.4 Importing Geospatial Data\nWe will learn how to import the following geospatial data into R by using st_read() of sf package:\n\nMP14_SUBZONE_WEB_PL, a polygon feature layer in ESRI shapefile format,\nCyclingPath, a line feature layer in ESRI shapefile format,\nPreSchool, a point feature layer in kml file format.\n\n\n1.4.1 Importing polygon feature data in shapefile format\nThe code chunk below uses st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a polygon feature data frame.\nNote:\n\nwhen the input geospatial data is in shapefile format, two arguments will be used, namely: dsn to define the data path and layer to provide the shapefile name.\nno extension such as .shp, .dbf, .prj and .shx are needed.\n\n\nmpsz = st_read(dsn = \"data/geospatial\",\n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/cathyc/Documents/cathyschu/ISSS626GEO/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nLearning:\n\nThe geospatial objects are multipolygon features.\nThere are a total of 323 multipolygon features and 15 fields in mpsz simple feature data frame. mpsz is in svy21 projected coordinates systems.\nThe bounding box provides the x extend and y extend of the data.\n\n\n\n1.4.2 Importing polyline feature data in shapefile form\nNow we use st_read() function of sf package to import CyclingPath shapefile into R as line feature data frame.\n\ncyclingpath = st_read(dsn = \"data/geospatial\",\n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/cathyc/Documents/cathyschu/ISSS626GEO/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nLearning:\n\nThere are a total of 4651 features and 19 fields in cyclingpath sf data frame.\nThe geospatial entities are capture in multilinestring object.\nSimilar to the MP19_SUBZONE_WEB_PL shape file, this data set is in in svy21 projected coordinates system too.\n\n\n\n1.4.3 Importing GIS data in kml format\nThe PreSchoolsLocation is in kml format. The code chunk below will be used to import the kml into R.\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/cathyc/Documents/cathyschu/ISSS626GEO/Hands-on_Ex/Hands-on_Ex01/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nLearning from code:\n\npreschool is a point feature data frame.\nThere are a total of 2290 features and 2 fields.\nDifferent from the previous two simple feature data frame, preschool is in wgs84 coordinates system."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "01-Geospatial Data Science with R",
    "section": "1.5 Checking the Content of A Simple Feature Data Frame",
    "text": "1.5 Checking the Content of A Simple Feature Data Frame\nPrior to wrangle the geospatial data, we should know more about the data sets first.\n\n1.5.1 Working with st_geometry()\nThe column in the sf data.frame that contains the geometries is a list of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nNote:\nThe print only displays basic information of the feature class such as type of geometry, the geographic extent of the features and the coordinate system of the data.\n\n\n1.5.2 Working with glimpse()\nWe would like to learn more about the associated attribute information in the data frame, besides the feature information. We will use glimpse() of dplyr in the code chunk below.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nglimpse() report reveals the data type of each fields. For example, FMEL-UPD_D field is in date data type and X_ADDR, Y_ADDR, SHAPE_L and SHAPE_AREA fields are all in double-precision values.\n\n\n1.5.3 Working with head()\nWhen we want to reveal complete information of a feature object, we can use head() of Base R.\n\nhead(mpsz, n = 5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\nNote:\nOne of the useful argument of head() is it allows user to select the numbers of record to display (i.e. the n argument)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-1",
    "title": "01-Geospatial Data Science with R",
    "section": "1.7",
    "text": "1.7\n\n1.7.1\n\n\n1.7.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-2",
    "title": "01-Geospatial Data Science with R",
    "section": "1.7",
    "text": "1.7\n\n1.7.1\n\n\n1.7.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-5",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-5",
    "title": "01-Geospatial Data Science with R",
    "section": "1.8",
    "text": "1.8\n\n1.8.1\n\n\n1.8.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-8",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-8",
    "title": "01-Geospatial Data Science with R",
    "section": "1.9",
    "text": "1.9\n\n1.9.1\n\n\n1.9.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section",
    "title": "01-Geospatial Data Science with R",
    "section": "1.7",
    "text": "1.7\n\n1.7.1\n\n\n1.7.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-4",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-4",
    "title": "01-Geospatial Data Science with R",
    "section": "1.8",
    "text": "1.8\n\n1.8.1\n\n\n1.8.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-7",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-7",
    "title": "01-Geospatial Data Science with R",
    "section": "1.9",
    "text": "1.9\n\n1.9.1\n\n\n1.9.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#plotting-the-geospatial-data",
    "title": "01-Geospatial Data Science with R",
    "section": "1.6 Plotting the Geospatial Data",
    "text": "1.6 Plotting the Geospatial Data\nIn geospatial data science, by looking at the feature information is not enough. We are also interested to visualise the geospatial features. This is the time we use plot() of R Graphic in the code chunk below to achieve this.\n\npar(bg = \"#D0DDD0\")\nplot(mpsz)\n\n\n\n\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry by using the code chunk below.\n\npar(bg = \"#e6f0e6\")\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\nAlternatively, we can also choose to plot the sf object by using a specific attribute as shown in the code chunk below.\n\npar(bg = \"#D0DDD0\")\nplot(mpsz[\"PLN_AREA_C\"])\n\n\n\n\n\n\n\n\nNote:\nplot() is appropriate for plotting the geospatial object for quick look. For high cartographic quality map, other R package such as tmap should be used.\nNext, we will plot the preschool layer on top of the mpsz layer by using the code chunk below.\n\npar(bg = \"#e6f0e6\")\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), add = TRUE)\n\n\n\n\n\n\n\n\nLearning:\nIn this plot, it has failed to plot on top of the mpsz layer. It is because mpsz is in svy21 and preschool is in wgs84. We need to transform preschool to match the SVY21 coordinate system.\n\npar(bg = \"#e6f0e6\")\npreschool_svy21 &lt;- st_transform(preschool, 3414)\n\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool_svy21), add = TRUE, col = \"#BA487F\", pch = 16, cex = 0.25)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-3",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-3",
    "title": "01-Geospatial Data Science with R",
    "section": "1.8",
    "text": "1.8\n\n1.8.1\n\n\n1.8.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-6",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#section-6",
    "title": "01-Geospatial Data Science with R",
    "section": "1.9",
    "text": "1.9\n\n1.9.1\n\n\n1.9.2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#working-with-projection",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#working-with-projection",
    "title": "01-Geospatial Data Science with R",
    "section": "1.7 Working with Projection",
    "text": "1.7 Working with Projection\n\n1.7.1 Assigning EPSG code to a simple feature data frame\n\n\n1.7.2 Transforming the projection of preschool from wgs84 to svy21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#importing-and-converting-an-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#importing-and-converting-an-aspatial-data",
    "title": "01-Geospatial Data Science with R",
    "section": "1.8 Importing and Converting An Aspatial Data",
    "text": "1.8 Importing and Converting An Aspatial Data\n\n1.8.1 Importing the aspatial data\n\n\n1.8.2 Creating a simple feature data frame from an aspatial data frame"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01a.html#geoprocessing-with-sf-package",
    "title": "01-Geospatial Data Science with R",
    "section": "1.9 Geoprocessing with sf package",
    "text": "1.9 Geoprocessing with sf package\n\n1.9.1 Use case 1: Land acquisition analysis\n\n\n1.9.2 Use case 2: To determine the number of pre-schools by planning subzone"
  }
]